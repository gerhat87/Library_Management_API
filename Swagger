openapi: 3.0.0
info:
  title: Library Management API
  description: A simple API to manage library books using JWT authentication.
  version: 1.0.0
servers:
  - url: http://localhost:5000/
paths:
  /login:
    post:
      summary: Login to the system
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  /books:
    get:
      summary: Get all books
      tags:
        - Books
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          default: 1
        - in: query
          name: per_page
          schema:
            type: integer
          default: 10
        - in: query
          name: genre
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        genre:
                          type: string
                        year_of_publication:
                          type: integer
                        author:
                          type: string
                  total:
                    type: integer
                  pages:
                    type: integer
                  current_page:
                    type: integer
        '401':
          description: Unauthorized
    post:
      summary: Add a new book
      tags:
        - Books
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                genre:
                  type: string
                year_of_publication:
                  type: integer
                author_id:
                  type: integer
              required:
                - title
                - genre
                - year_of_publication
                - author_id
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
  /books/{bookId}:
    get:
      summary: Get a specific book by ID
      tags:
        - Books
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  genre:
                    type: string
                  year_of_publication:
                    type: integer
                  author_id:
                    type: integer
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    put:
      summary: Update an existing book
      tags:
        - Books
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                genre:
                  type: string
                year_of_publication:
                  type: integer
                author_id:
                  type: integer
              required:
                - title
                - genre
                - year_of_publication
                - author_id
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    delete:
      summary: Delete a book
      tags:
        - Books
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
        '404':
          description: Not Found
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
